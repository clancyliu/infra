services:
  # Prometheus 服务
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    #      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - my_shared_monitoring_network # Grafana 也连接到共享网络，方便访问 Prometheus


  # Grafana 服务
  grafana:
    image: grafana/grafana:10.0.1
    container_name: grafana
    ports:
      - "3000:3000"
    #    volumes:
    #      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - my_shared_monitoring_network # Grafana 也连接到共享网络，方便访问 Prometheus

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    ports:
#      - 9100:9100
    restart: always
    networks:
      - my_shared_monitoring_network # Grafana 也连接到共享网络，方便访问 Prometheus

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    #    ports:
    #      - "${CADVISOR_PORT:-8080}:8080"
    restart: always
    networks:
      - my_shared_monitoring_network # Grafana 也连接到共享网络，方便访问 Prometheus

networks:
  my_shared_monitoring_network:
    external: true # 声明这是一个外部创建的网络